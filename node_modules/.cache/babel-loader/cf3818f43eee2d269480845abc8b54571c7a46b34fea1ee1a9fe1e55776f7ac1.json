{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from \"react\";\nimport prepareData from \"../utils/prepareData\";\nimport axios from \"axios\";\nimport { SPACE_API_URL } from \"../utils/constants\";\n\n//axios.defaults.baseURL = SPACEX_API_URL;\nconst useSpaceMission = filterParams => {\n  _s();\n  const [fetchMission, setFetchMission] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchSpaceList = useCallback(async () => {\n    try {\n      const response = await axios.get(SPACE_API_URL);\n      const filteredMissions = prepareData(filterParams)(response.data);\n      console.log(\"Filtered missions:\", filteredMissions); // Log the filtered data to verify the filtering process\n      setFetchMission(filteredMissions);\n    } catch (err) {\n      console.error(\"Error fetching missions:\", err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [filterParams]);\n  useEffect(() => {\n    fetchSpaceList();\n  }, [fetchSpaceList]);\n  return {\n    fetchMission,\n    loading,\n    error\n  };\n};\n_s(useSpaceMission, \"FqHF46dnv6D0A8SQzBW0EKRIW4A=\");\nexport default useSpaceMission;","map":{"version":3,"names":["useEffect","useState","useCallback","prepareData","axios","SPACE_API_URL","useSpaceMission","filterParams","_s","fetchMission","setFetchMission","loading","setLoading","error","setError","fetchSpaceList","response","get","filteredMissions","data","console","log","err"],"sources":["D:/Fe-hometask/react-missions/src/hooks/useSpaceMission.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\r\nimport prepareData from \"../utils/prepareData\";\r\nimport axios from \"axios\";\r\nimport { SPACE_API_URL } from \"../utils/constants\";\r\n\r\n//axios.defaults.baseURL = SPACEX_API_URL;\r\nconst useSpaceMission = (filterParams) => {\r\n  const [fetchMission, setFetchMission] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchSpaceList = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(SPACE_API_URL);\r\n      const filteredMissions = prepareData(filterParams)(response.data);\r\n      console.log(\"Filtered missions:\", filteredMissions); // Log the filtered data to verify the filtering process\r\n      setFetchMission(filteredMissions);\r\n    } catch (err) {\r\n      console.error(\"Error fetching missions:\", err);\r\n      setError(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filterParams]);\r\n\r\n  useEffect(() => {\r\n    fetchSpaceList();\r\n  }, [fetchSpaceList]);\r\n\r\n  return { fetchMission, loading, error };\r\n};\r\n\r\nexport default useSpaceMission;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,oBAAoB;;AAElD;AACA,MAAMC,eAAe,GAAIC,YAAY,IAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,cAAc,GAAGb,WAAW,CAAC,YAAY;IAC7C,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACZ,aAAa,CAAC;MAC/C,MAAMa,gBAAgB,GAAGf,WAAW,CAACI,YAAY,CAAC,CAACS,QAAQ,CAACG,IAAI,CAAC;MACjEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,gBAAgB,CAAC,CAAC,CAAC;MACrDR,eAAe,CAACQ,gBAAgB,CAAC;IACnC,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZF,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAES,GAAG,CAAC;MAC9CR,QAAQ,CAACQ,GAAG,CAAC;IACf,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAElBP,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,OAAO;IAAEN,YAAY;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACzC,CAAC;AAACL,EAAA,CAxBIF,eAAe;AA0BrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}